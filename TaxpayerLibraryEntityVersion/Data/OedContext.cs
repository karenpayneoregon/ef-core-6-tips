// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using ConfigurationLibrary.Classes;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using System;
using System.Collections.Generic;
using TaxpayerLibraryEntityVersion.Converters;
using TaxpayerLibraryEntityVersion.Data.Configurations;
using TaxpayerLibraryEntityVersion.Models;
#nullable disable

namespace TaxpayerLibraryEntityVersion.Data;

public partial class OedContext : DbContext
{
    public OedContext()
    {
    }

    public OedContext(DbContextOptions<OedContext> options) : base(options)
    {
    }

    public virtual DbSet<Taxpayer> Taxpayer { get; set; }
    public virtual DbSet<Category> Categories { get; set; }


    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    {
        if (!optionsBuilder.IsConfigured)
        {
            optionsBuilder.UseSqlServer(ConfigurationHelper.ConnectionString());
        }
    }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.ApplyConfiguration(new Configurations.TaxpayerConfiguration());

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);

    /// <summary>
    /// This method sets up all <see cref="DateOnly"/> properties to have
    /// a conversion to and from <see cref="DateTime"/> as in the <see cref="Taxpayer"/>
    /// table one column is date.
    /// </summary>
    /// <param name="builder"></param>
    protected override void ConfigureConventions(ModelConfigurationBuilder builder)
    {

        builder.Properties<DateOnly>()
            .HaveConversion<DateOnlyConverter>()
            .HaveColumnType("date");

        base.ConfigureConventions(builder);

    }
}